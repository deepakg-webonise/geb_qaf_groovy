<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="QAS Demo" duration-ms="461" started-at="2016-12-12T13:22:35Z" finished-at="2016-12-12T13:22:36Z">
    <groups>
      <group name="SMOKE">
        <method signature="scenarios.suite1.bdd.SampleTest()[pri:1000, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" name="SampleTest" class="com.qmetry.qaf.automation.step.client.Scenario"/>
      </group> <!-- SMOKE -->
    </groups>
    <test name="BDD Test" duration-ms="461" started-at="2016-12-12T13:22:35Z" finished-at="2016-12-12T13:22:36Z">
      <class name="com.qmetry.qaf.automation.step.client.Scenario">
        <test-method status="PASS" signature="setupSuit(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="SampleTest" name="setupSuit" is-config="true" duration-ms="13" started-at="2016-12-12T18:52:35Z" finished-at="2016-12-12T18:52:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@145eaa29]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSuit -->
        <test-method status="PASS" signature="setupTest(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="SampleTest" name="setupTest" is-config="true" duration-ms="0" started-at="2016-12-12T18:52:35Z" finished-at="2016-12-12T18:52:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@145eaa29]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method status="PASS" signature="setup(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="SampleTest" name="setup" is-config="true" duration-ms="1" started-at="2016-12-12T18:52:35Z" finished-at="2016-12-12T18:52:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@145eaa29]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="SampleTest()[pri:1000, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="SampleTest" name="SampleTest" duration-ms="426" started-at="2016-12-12T18:52:35Z" description="Sample Test Scenario" finished-at="2016-12-12T18:52:36Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[Could not initialize class groovy.HomePage$__clinit__closure1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: Could not initialize class groovy.HomePage$__clinit__closure1
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Unknown Source)
	at com.qmetry.qaf.automation.util.ClassUtil.getClasses(ClassUtil.java:222)
	at com.qmetry.qaf.automation.util.ClassUtil.getClasses(ClassUtil.java:164)
	at com.qmetry.qaf.automation.core.ClassFinderFactory$DefaultClassFinder.getClasses(ClassFinderFactory.java:65)
	at com.qmetry.qaf.automation.step.JavaStepFinder.getAllJavaSteps(JavaStepFinder.java:77)
	at com.qmetry.qaf.automation.core.ConfigurationManager.getStepMapping(ConfigurationManager.java:297)
	at com.qmetry.qaf.automation.step.StringTestStep.getTestStep(StringTestStep.java:189)
	at com.qmetry.qaf.automation.step.StringTestStep.initStep(StringTestStep.java:78)
	at com.qmetry.qaf.automation.step.client.Scenario.execute(Scenario.java:187)
	at com.qmetry.qaf.automation.step.client.Scenario.scenario(Scenario.java:219)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:806)
	at org.testng.TestRunner.run(TestRunner.java:656)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SampleTest -->
        <test-method status="PASS" signature="setupMethod(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="SampleTest" name="setupMethod" is-config="true" duration-ms="0" started-at="2016-12-12T18:52:35Z" finished-at="2016-12-12T18:52:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qmetry.qaf.automation.step.client.Scenario.scenario()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@145eaa29]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="SampleTest" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-12-12T18:52:36Z" finished-at="2016-12-12T18:52:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@145eaa29]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SampleTest status=FAILURE method=scenarios.suite1.bdd.SampleTest()[pri:1000, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="SampleTest" name="afterClass" is-config="true" duration-ms="1" started-at="2016-12-12T18:52:36Z" finished-at="2016-12-12T18:52:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@145eaa29]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="SampleTest" name="afterTest" is-config="true" duration-ms="13" started-at="2016-12-12T18:52:36Z" finished-at="2016-12-12T18:52:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@145eaa29]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuit(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="SampleTest" name="afterSuit" is-config="true" duration-ms="1" started-at="2016-12-12T18:52:36Z" finished-at="2016-12-12T18:52:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@145eaa29]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuit -->
      </class> <!-- com.qmetry.qaf.automation.step.client.Scenario -->
    </test> <!-- BDD Test -->
  </suite> <!-- QAS Demo -->
</testng-results>
